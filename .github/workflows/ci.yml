# Name of this GitHub Actions workflow.
name: react-native mobile ci

on:
  workflow_call:
    inputs:
      project_name:
        type: string
        default: "sg-ci"

jobs:
  sast:
    name: SAST Scan using semgrep
    if: (github.actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    permissions: write-all
    container:
        image: public.ecr.aws/studiographene/ci:node-20-alpine
    steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: ${{ github.REF }}
        - name: SAST Scan
          id : generate_report
          run: |
            semgrep scan --config "p/default" --config /root/configs/semgrep/rules/eslint.v1.3.32.yml --sarif ${{ inputs.semgrep_options }} > semgrep.sarif

            csvData=$(node - << EOF
            const fs = require('fs');
            const sarifFile = fs.readFileSync("semgrep.sarif", 'utf8');
            const sarifData = JSON.parse(sarifFile);

            const tableData = [];

            for (const run of sarifData.runs) {
              for (const result of run.results) {
                let ruleId = result.ruleId.replaceAll(',',';');
                ruleId = ruleId.replaceAll('\n','');
                let message = result.message.text.replaceAll(',', ';');
                message = message.replaceAll('\n','');
                const severity = result.level;
                const location = result.locations[0].physicalLocation;
                const lineNumber = location.region.startLine;
                const fileName = location.artifactLocation.uri;
                // Add data to the tableData array
                tableData.push(ruleId + "|" + message +"|" + lineNumber + "|" + fileName);
              }
            }                  
            // Log the CSV data as a string
            const csvData = tableData.join('\n');
            console.log(csvData);
            EOF
            )

            # Append the CSV data to the output file
            echo 'report<<EOF' >> $GITHUB_OUTPUT
            echo "$csvData" >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT

        - uses: mshick/add-pr-comment@v2
          with:
            message-id : sast-scan
            message:
              "### Semgrep Report \n
                Below are the issues found by semgrep: \n
                \n\nRule Id | Message | Line Number | File Name \n
                --- | --- | --- | --- \n
                ${{steps.generate_report.outputs.report}}\n\n
              "